/* Grid Layout System for Dashboard Cards */
.grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    /* Remove fixed rows to allow for variable heights */
    grid-auto-rows: min-content;
    gap: 20px;
    padding: 20px 0;
    width: 100%;
    /* Ensure dense packing to fill all available spaces */
    grid-auto-flow: dense;
    /* Add vertical grid areas for better space utilization */
    grid-template-rows: repeat(auto-fill, minmax(min-content, auto));
}

/* Card styles for grid items */
.grid-item {
    background: #1b263b;
    color: #fff;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    padding: 20px;
    cursor: default;
    transition: box-shadow 0.3s ease, transform 0.1s ease;
    min-height: 150px;
    position: relative;
    display: flex;
    flex-direction: column;
    /* Allow each card to have its own height */
    height: auto;
    /* Ensure cards don't align by row */
    align-self: start;
    /* Added to make cards take only needed space */
    max-height: fit-content;
    overflow: visible;
}

.grid-item:hover {
    box-shadow: 0 5px 15px rgba(0,0,0,0.15);
}

.grid-item.dragging {
    opacity: 0.85;
    box-shadow: 0 10px 25px rgba(0,0,0,0.3);
    pointer-events: none; /* Prevent interaction with contents while dragging */
    animation: none; /* Disable any animations during drag */
    transition: none; /* Disable transitions during drag for responsiveness */
    cursor: grabbing;
}

/* Card content */
.card-content {
    flex: 1;
    overflow: auto;
    min-height: 50px;
    /* Smooth transition for height changes */
    transition: height 0.3s ease;
}

/* Specific card content styles */
#system-info-card .card-content {
    display: flex;
    flex-direction: row;
    gap: 20px;
}

#temperature-card .temperature-container {
    height: auto;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

#reed-switch-card .reed-switch-container {
    height: 100%;
    display: flex;
    flex-direction: column;
}

/* Responsive adjustments for card content */
@media (max-width: 768px) {
    #system-info-card .card-content {
        flex-direction: column;
        gap: 10px;
    }
}

/* Card header */
.grid-item-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 15px;
    cursor: move;
}

.grid-item-header h3 {
    margin: 0;
    font-size: 1.2em;
}

/* Placeholder during drag */
.grid-item-placeholder {
    border: 2px dashed #415a77;
    background-color: rgba(65, 90, 119, 0.2);
    border-radius: 12px;
    transition: all 0.2s ease; /* Smooth transitions for placeholder */
    min-height: 150px;
    position: relative;
    animation: pulsePlaceholder 1.5s infinite;
}

@keyframes pulsePlaceholder {
    0% { background-color: rgba(65, 90, 119, 0.1); }
    50% { background-color: rgba(65, 90, 119, 0.3); }
    100% { background-color: rgba(65, 90, 119, 0.1); }
}

/* Add a hint text to the placeholder */
.grid-item-placeholder::after {
    content: 'Відпустіть тут';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #415a77;
    font-weight: bold;
    white-space: nowrap;
    pointer-events: none;
}

/* Size classes for grid items - only control width */
.grid-item.size-1x1,
.grid-item.size-1x2 {
    grid-column: span 1;
}

.grid-item.size-2x1,
.grid-item.size-2x2 {
    grid-column: span 2;
}

/* Individual card height is controlled by inline styles on card-content */
/* No height restrictions based on classes */

/* Cards with custom height */
.grid-item.custom-height {
    height: auto !important;
    align-self: start !important;
    z-index: 1; /* Ensure custom height cards are rendered above others */
}

.grid-item.custom-height .card-content {
    height: attr(data-height px); /* Use data attribute if available */
    overflow-y: auto;
}

/* Resize handle */
.resize-handle {
    position: absolute;
    width: 24px;
    height: 24px;
    bottom: 5px;
    right: 5px;
    cursor: se-resize;
    opacity: 0;
    transition: opacity 0.2s ease;
    background-color: rgba(65, 90, 119, 0.5);
    border-radius: 4px;
}

.grid-item:hover .resize-handle {
    opacity: 0.7;
}

.resize-handle:hover {
    opacity: 1;
    background-color: rgba(65, 90, 119, 0.8);
}

.resize-handle::before,
.resize-handle::after {
    content: '';
    position: absolute;
    background-color: #fff;
}

.resize-handle::before {
    width: 12px;
    height: 2px;
    bottom: 6px;
    right: 4px;
    box-shadow: 0 -4px 0 #fff, 0 -8px 0 #fff;
}

.resize-handle::after {
    width: 2px;
    height: 12px;
    bottom: 4px;
    right: 6px;
    box-shadow: -4px 0 0 #fff, -8px 0 0 #fff;
}

/* Dashboard control buttons */
.dashboard-controls {
    /* Add transition for smooth animations */
    transition: all 0.3s ease;
    /* Add white border with glow effect */
    border: 2px solid #ffffff !important;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3), 0 2px 10px rgba(0, 0, 0, 0.2) !important;
    /* Ensure vertical centering */
    align-items: center;
}

.reset-layout-btn,
.edit-layout-btn {
    background-color: #415a77;
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 16px; /* Adjusted vertical padding to 8px */
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    /* Add shadow for better appearance */
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    /* Ensure consistent height */
    line-height: 1.2;
    margin: 0;
}

.reset-layout-btn:hover,
.edit-layout-btn:hover {
    background-color: #546a87;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.edit-layout-btn.active {
    background-color: #e63946;
}

.edit-layout-btn.active:hover {
    background-color: #d62b39;
}

/* Make the controls more visible when in edit mode */
.grid-container.edit-mode + .dashboard-controls,
.grid-container.edit-mode ~ .dashboard-controls {
    transform: scale(1.05);
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
}

/* Edit mode styles */
.grid-container.edit-mode .grid-item {
    border: 2px dashed #546a87;
    position: relative;
    cursor: move; /* Show move cursor for the entire card in edit mode */
}

.grid-container.edit-mode .grid-item:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(65, 90, 119, 0.1);
    pointer-events: none;
}

.grid-container.edit-mode .resize-handle {
    opacity: 1;
}

/* Edit mode instructions */
.edit-mode-instructions {
    background-color: rgba(27, 38, 59, 0.9);
    border: 1px solid #415a77;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 15px;
    color: #fff;
    text-align: center;
    animation: fadeIn 0.5s ease;
}

.instructions-content {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.instructions-content p {
    margin: 0;
    font-size: 14px;
    color: #bfc9da;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* Force grid recalculation */
.grid-container.refresh-grid {
    animation: refreshGrid 0.01s;
}

@keyframes refreshGrid {
    0% { opacity: 0.99; }
    100% { opacity: 1; }
}

/* For larger screens, maintain the grid layout */
@media (min-width: 1025px) {
    .grid-container {
        /* Two column layout by default */
        grid-template-columns: repeat(2, 1fr);
    }
    
    /* Allow cards to break the grid row and fill gaps */
    .grid-item.size-1x1,
    .grid-item.size-1x2 {
        grid-column: span 1;
    }
    
    .grid-item.size-2x1,
    .grid-item.size-2x2 {
        grid-column: span 2;
    }
}

@media (max-width: 1024px) {
    .grid-container {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 15px;
    }
    
    .grid-item.size-2x1,
    .grid-item.size-2x2 {
        grid-column: span 1;
    }
}

@media (max-width: 600px) {
    .grid-container {
        grid-template-columns: 1fr;
        gap: 10px;
    }
    
    .grid-item {
        grid-column: span 1 !important;
    }
} 